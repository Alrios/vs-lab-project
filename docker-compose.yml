version: "3.8"
services:
  backend:
    container_name: spring-boot
    build:
      context: ./
      dockerfile: ./backend/Dockerfile
    ports:
      - "8080:8080"
    restart: always
    volumes:
      - "./backend:/vs-lab-project/backend/"
    depends_on: 
      - mysql 
    networks:
      - backend
      - frontend
  
  frontend:
    container_name: react
    build:
      context: ./
      dockerfile: ./frontend/Dockerfile
    ports:
      - "3000:3000"
    restart: always
    environment:
      WATCHPACK_POLLING: true
    volumes:
      - "./frontend/data:/vs-lab-project/frontend/data/"
      - "./frontend/public:/vs-lab-project/frontend/public/"
      - "./frontend/src:/vs-lab-project/frontend/src/"
    depends_on:
      - backend
    networks:
      - frontend

  mysql:
    container_name: mysql
    image: mysql:5.7
    ports:
      - "3307:3306"
    restart: always
    environment:
      MYSQL_DATABASE: VS_LAB_PROJECT
      MYSQL_USER: vs
      MYSQL_PASSWORD: vs123
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - db:/var/lib/mysql
    networks:
      - backend  

volumes:
  db:

networks:
  backend:   
  frontend: